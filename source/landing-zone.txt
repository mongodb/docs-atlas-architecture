.. _arch-center-landing-zone:

===================
Landing Zone Design
===================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. meta::   
   :description: Learn how to design a landing zone for MongoDB Atlas.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: onecol

A landing zone is an organization-specific framework for establishing a well-architected and
pre-configured cloud environment. Before moving any enterprise workload to MongoDB {+service+},
we recommend that our enterprise customers design a landing zone to align all teams and stakeholders
on requirements for operational efficiency, security, reliability, performance, and cost. 

An {+service+} landing zone defines the default, minimum, and maximum
settings that teams use to deploy workloads in {+service+}. A landing
zone also defines the tools and settings that teams should leverage in
order to integrate systems with {+service+} and their applications
connecting to {+service+}.

Designing and implementing a landing zone can save a company from spending unnecessary time and resources
to redesign and rearchitect initial setups later down the line.
For example, while in talks to move their on-premises databases to MongoDB {+service+}, 
one of our recent enterprise customers voiced concern over how peer companies are struggling to maintain
security and cost-efficiency across teams. One peer had accumulated runaway cloud costs due to a lack of spending oversight,
while another peer had faced widely publicized security risks due to inconsistent encryption policies across teams.
To avoid these risks, our enterprise customer partnered with MongoDB's Professional Services team
to design a landing zone that enforces company-wide policies including encryption at rest with {+byok+} and FinOps integrations to tag and track spending. 

.. _landing-zone-considerations:

What Are Some Landing Zone Considerations?
------------------------------------------

When you create your landing zone, consider how your organization 
defines the following requirements and how that aligns with {+service+}'s 
default configurations:

Critical Considerations
~~~~~~~~~~~~~~~~~~~~~~~

You should define the following requirements in a landing zone framework 
before your enterprise begins to move any workload to the cloud:

Advanced Considerations 
~~~~~~~~~~~~~~~~~~~~~~~

To design a more thorough and reliable landing zone, consider definiing the following advanced requirements
for your organization: 

.. list-table::
   :header-rows: 1
   :widths: 16 42 42 

   * - Consideration
     - Description
     - Default Configuration
   * - System Hierarchy Requirements
     - Define how you will organize your {+service+} organizations, projects, and clusters
       to isolate between teams, environments, and billable groups. 
       For example, you can create a separate organization for each business unit to meet 
       security and authorization requirements across teams. 
       
       To get recommendations and learn more about this topic, see
       :ref:`arch-center-hierarchy`.

   * - Data Retention Requirements
     - Identify and record your data retention policies. This may
       require creating a classification for automation, including
       creation of archive or purge automation. In some cases, data
       must be preserved for a certain duration, whereas in other cases
       data must be purged after some duration. Identify performance
       characteristics of retrieval of archived records.
   * - Disaster Recovery Requirements
     - Define and record a disaster recovery plan that meets the following criteria: 
     
       - Defines an optimal |rpo| and |rpo| for your organization
       - Defines a backup snapshot schedule and requirements for snapshot retention and mutli-region distribution 
       - Identifies recovery methods such as snapshot restores, queryable backups, document versioning, region shifting, 
         or provider pivot
       - Defines disaster recovery procedures for possible disaster scenarios such as zonal, regional, or cloud-provider 
         outages, resource failures, data corruption events, and more. 

       To get recommendations and learn more about this topic, see
       the following pages: 
       
       - :ref:`arch-center-dr`
       - :ref:`arch-center-backups`
   * - High Availability Requirements
     - Set standards for high availability that ensure system operation during planned or 
       unplanned outages. These requirements will partially determine the number of nodes, 
       regions, and cloud providers in your deployment paradigm. 

       To get recommendations and learn more about this topic, see
       the following pages: 

       - :ref:`arch-center-high-availability`
       - :ref:`arch-center-paradigms`
     - {+service+} automatically configures a minimum three-node replica set when you launch a new cluster. 
       A cluster performs automatic failover if a primary replica set member experiences an outage. 
   * - Monitoring and Observability Requirements
     - Set standards for observability that define which logs and metrics you will monitor and how you will monitor them. For example, set up
       external system integrations that ingest {+service+} log files, audit logs, or activity feed data, 
       or configure alerts and reporting guidelines for certain event types.

       To get recommendations and learn more about this topic, see
       the following pages:
       
       - :ref:`arch-center-monitoring-alerts`.
       - :ref:`arch-center-auditing-logging`.
   * - Auditing and Change Control Requirements
     - Define  any auditing or change control requirements. This
       can include change approval processes and tools, along with
       reporting guidelines.

       To get recommendations and learn more about this topic, see
       :ref:`arch-center-auditing-logging`.
   * - Security Requirements
     - Define security requirements including the following: 

       - Principals and mechanisms for how to authenticate and authorize access to 
         the |service| control plane (|service| UI and {+atlas-admin-api+}), database resources, and database operations
       - Standards for data encryption in transit, at rest, and in use
       - Network security configurations, such as requiring |tls-ssl| connection encryption, private endpoints and |vpc| connections 
         to isolate your data flow from the public internet. 

       To get recommendations and learn more about this topic, see the following pages:

       - :ref:`arch-center-auth`
       - :ref:`arch-center-data-encryption`
       - :ref:`arch-center-network-security`
   * - Compliance Requirements
     - Consider how your data residency determines data sovereignty
       and therefore which laws apply to your data. Identify and account for any specific legal and regulatory
       requirements not clearly articulated within other categories of requirements. 

       Your data residency depends on which regions and geographies you choose to deploy to in your deployment paradigm, 
       and whether you choose to partition your data between geographies.  

       To get recommendations and learn more about this topic, see the following pages:

       - :ref:`arch-center-compliance`
       - :ref:`arch-center-paradigms`
   * - Maintenance Requirements
     - Identify whether you have any specific requirements regarding
       Maintenance windows or upgrade deferments.
   * - Billing Requirements
     - Identify any specific requirements to billing, such as
       integrations with FinOps tools for reporting and charge-back.
       You can build these requirements into the automation and
       provisioning process for {+service+} {+clusters+} to facilitate
       this integration.

       To get recommendations and learn more about this topic, see
       :ref:`arch-center-billing-data`.

Design Your Landing Zone
------------------------

MongoDB's Professional Services team partners with enterprise
customers to create custom landing zones for {+service+}. If you're
working with MongoDB's Professional Services, the resources on this
page can also help you plan for those discussions.

Use the following resources as a starting point for your {+service+} landing zone.
Designing a landing zone is an iterative process that involves reviewing
and realigning standards across teams. We recommend that you compile all diagrams, recommendations, and
examples in a document and adjust them to meet your organization's requirements.

Example Landing Zone Diagram
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example diagram unifies many of the architectural diagrams
across the {+atlas-arch-center+} in one image to visualize your
landing zone. You can adjust it as needed to customize it for your organization.

.. figure:: /includes/images/LandingZone.svg
   :alt: "A diagram showing an example {+service+} landing zone."
   :figwidth: 1000px
   :align: center
   :lightbox:

Information In The {+atlas-arch-center+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To begin, copy the relevant guidance and examples in :ref:`arch-center-hierarchy`, which helps you create your first foundational components in {+service+}.

Then, review the guidance and examples for each of the pages nested under each {+waf+} pillar in the {+atlas-arch-center+}. Copy the
diagrams, recommendations, tools, and examples that are relevant for
your organization.

.. include:: /includes/complete-examples.rst

The {+atlas-arch-center+} pages include:

- Operational Efficiency

  - :ref:`arch-center-automation`
  - :ref:`arch-center-monitoring-alerts`
- Security

  - :ref:`arch-center-network-security`
  - :ref:`arch-center-auth`
  - :ref:`arch-center-data-encryption`
  - :ref:`arch-center-compliance`
  - :ref:`arch-center-auditing-logging`
- Reliability

  - :ref:`arch-center-high-availability`
  - :ref:`arch-center-resiliency`
  - :ref:`arch-center-backups`
  - :ref:`arch-center-dr`
- Performance

  - :ref:`arch-center-scalability`
- Cost Optimization

  - :ref:`arch-center-cost-saving-config`
  - :ref:`arch-center-billing-data`

Your Organization's Requirements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Adjust the example landing zone diagram, recommendations, and examples
that you copied from the {+atlas-arch-center+} to fit your
organization's specific requirements. For example, if you use only 
{+gcp+} as a cloud provider, your landing zone should specify that
requirement and you should exclude any recommendations and examples
applicable only to |aws| and |azure|.

To identify more considerations and requirements specific to your
organization, see the previous section on
:ref:`Landing Zone Considerations <landing-zone-considerations>`.

Next Steps
----------

See the :ref:`arch-center-hierarchy` page to learn about the building blocks of your {+service+} enterprise estate or use the left
navigation to find features and best practices for each {+waf+} pillar.
