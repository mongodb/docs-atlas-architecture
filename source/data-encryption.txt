.. _arch-center-data-encryption:

===============
Data Encryption 
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: onecol

MongoDB Atlas offers encryption features to protect data while in transit, at rest, and in useâ€”safeguarding data through its full lifecycle.

Encryption in transit
~~~~~~~~~~~~~~~~~~~~~~~

Encryption in transit secures data during transmission between clients and servers, preventing unauthorized access or tampering.
In MongoDB Atlas, all network traffic to MongoDB clusters is protected by Transport Layer Security (TLS), which is enabled by default and cannot be disabled.
Data transmitted to and between MongoDB cluster nodes is encrypted in transit using TLS, ensuring secure communication throughout.

Encryption at rest
~~~~~~~~~~~~~~~~~~~~

Encryption at rest ensures that all stored files and data are encrypted, providing a critical layer of database-level protection.
In MongoDB Atlas, customer data is automatically encrypted at rest using AES-256 to protect on-disk data.
This process utilizes your cloud provider's transparent disk encryption, with the provider managing the encryption keys.
Additionally, you have the option to enable database-level encryption, allowing you to use :ref:`your own encryption keys <security-kms-encryption>`
via AWS Key Management Service (KMS), Google Cloud KMS, or Azure Key Vault.

In-Use Encryption
~~~~~~~~~~~~~~~~~~~

Encryption in use secures data while it's being processed.
MongoDB has two features for encryption in use to meet your data protection needs: Client-Side Field-Level Encryption and Queryable Encryption.

Client-Side Field-Level Encryption
```````````````````````````````````

:ref:`Client-Side Field-Level Encryption <manual-csfle-feature>` (CSFLE) is an in-use encryption capability
that enables a client application to encrypt sensitive data before storing it in the MongoDB database.
Sensitive data is transparently encrypted, remains encrypted throughout its lifecycle, and is only decrypted on the client side.

Queryable Encryption
`````````````````````

:ref:`Queryable Encryption <qe-manual-feature-qe>` helps organizations protect sensitive data when it is queried and in-use on MongoDB.
It allows applications to encrypt sensitive data on the client side, securely store it in the MongoDB database,and perform equality and range queries directly on the encrypted data.
This ensures strong cryptographic protection for sensitive information without sacrificing the ability to perform queries on it.
