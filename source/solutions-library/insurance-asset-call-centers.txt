.. _arch-center-is-call-centers:

================================================
AI-Powered Call Center Intelligence with MongoDB
================================================

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: call centers, insurance, Vector Search, gen AI 
   :description: Discover how MongoDB Atlas Vector Search and AI convert insurance call recordings into searchable insights, enabling faster, more efficient customer service.
   
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Transform customer service with MongoDB Atlas Vector Search and RAG.
Convert call recordings into searchable insights for faster, more
accurate responses.

**Use cases:** `Analytics
<https://www.mongodb.com/solutions/use-cases/analytics>`__, `Gen AI
<https://www.mongodb.com/use-cases/artificial-intelligence>`__,
`Modernization
<https://www.mongodb.com/resources/solutions/use-cases/application-modernization>`__,
`Personalization
<https://www.mongodb.com/solutions/use-cases/personalization>`__ 

**Industries:** `Insurance
<https://www.mongodb.com/solutions/industries/insurance>`__, `Financial
Services
<https://www.mongodb.com/solutions/industries/financial-services>`__,
`Healthcare
<https://www.mongodb.com/solutions/industries/healthcare>`__, `Retail
<https://www.mongodb.com/solutions/industries/retail>`__,
`Telecommunications
<https://www.mongodb.com/solutions/industries/telecommunications>`__

**Products:** `MongoDB Atlas <http://mongodb.com/atlas>`__, `Atlas
Search <https://www.mongodb.com/products/platform/atlas-search>`__,
`Atlas Vector Search
<https://www.mongodb.com/products/platform/atlas-vector-search>`__

**Partners:** `AWS <https://aws.amazon.com/>`__, `Cohere
<https://cloud.mongodb.com/ecosystem/cohere>`__, `Dataworkz
<https://cloud.mongodb.com/ecosystem/dataworkz>`__, `LangChain
<https://cloud.mongodb.com/ecosystem/langchain>`__ 

Solution Overview 
-----------------

Customer satisfaction is critical for insurance companies. Studies have
shown that companies with superior customer experiences consistently
outperform their peers. In fact, McKinsey found that life and
property/casualty insurers with superior customer experiences saw a
significant `20% and 65% increase
<https://www.mckinsey.com/industries/financial-services/our-insights/insurance/elevating-customer-experience-a-win-win-for-insurers-and-customers>`__
in total shareholder return, respectively, over five years. 

A satisfied customer is a loyal customer. They are `80%
<https://www.mckinsey.com/industries/financial-services/our-insights/the-growth-engine-superior-customer-experience-in-insurance>`__
more likely to renew their policies, directly contributing to
sustainable growth. However, one major challenge faced by many insurance
companies is the inefficiency of their call centers. Agents often
struggle to quickly locate and deliver accurate information to
customers, leading to frustration and dissatisfaction.

This solution illustrates how MongoDB can transform call center
operations. By converting call recordings into searchable vectors
(numerical representations of data points in a multi-dimensional space),
businesses can quickly access relevant information and improve customer
service. We'll dig into how the integration of Amazon Transcribe,
Cohere, and MongoDB Atlas Vector Search is achieving this
transformation.

Customer service interactions are goldmines of valuable insights. By
analyzing call recordings, we can identify successful resolution
strategies and uncover frequently asked questions. In turn, by making
this information—which is often buried in audio files— accessible to
agents, it can give customers faster and more accurate assistance.

However, the vast volume and unstructured nature of these audio files
make it challenging to extract actionable information efficiently.

To address this challenge, we propose a pipeline that leverages AI and
analytics to transform raw audio recordings into into vectors as shown
in Figure 1: 

- Storage of raw audio files: Past call recordings are stored in their
  original audio format.

- Processing of the audio files with AI and analytics services (such as
  Amazon Transcribe Call Analytics): speech-to-text conversion,
  summarization of content, and vectorization.

- Storage of vectors and metadata: The generated vectors and associated
  metadata (e.g., call timestamps, agent information) are stored in an
  operational data store.

Once the data is stored in vector format within the operational data
store, it becomes accessible for real-time applications. This data can
be consumed directly through vector search or integrated into a
`retrieval-augmented generation
<https://www.mongodb.com/resources/basics/artificial-intelligence/retrieval-augmented-generation>`__
(RAG) architecture, a technique that combines the capabilities of `large
language models
<https://www.mongodb.com/resources/basics/artificial-intelligence/large-language-models>`__
(LLMs) with external knowledge sources to generate more accurate and
informative outputs.

.. figure:: /includes/images/industry-solutions/call-centers-pipeline.svg
   :figwidth: 1200px
   :alt: Customer service vectorization flow
   
   Figure 1. Customer service call insight extraction and vectorization flow

.. video:: https://www.youtube.com/watch?v=T-c2OnVh7Vo

Reference Architectures
-----------------------

**With MongoDB**:

At the core of this architecture we have three key components: 

- `MongoDB Atlas
  <https://www.mongodb.com/products/platform/atlas-database>`__: A
  powerful, general-purpose data platform that
  seamlessly manages our data in the cloud. MongoDB's flexible document
  model allows products to scale easily by adding more descriptions
  (i.e. for translations in multiple languages) without introducing
  complexity. 

- The object storage: An effective system for efficient product image
  file storage and retrieval. This can be built with Google Cloud
  storage, Azure Blob Storage or AWS S3. 

- `Together AI <https://www.together.ai/>`__: Offers a variety of
  generative AI services, making it easy to run or fine-tune leading
  open source models with only a few lines of code. This solution uses
  their available `vision LLMs <https://www.together.ai/models>`__ to
  generate the product descriptions.

.. figure:: /includes/images/industry-solutions/product-description-architecture.svg
   :figwidth: 1200px
   :alt: Product description architecture diagram
   
   Figure 1. Product description generative AI architecture

The journey starts on the left side of the diagram with the *User/Event*
label. A laptop icon represents the “Product Description Generator”
system. First, a new product is received, this can be added manually by
a user or in bulk through an automated event. 

Then, retailers generate the descriptions by sending a *query* to Together
AI’s endpoint, utilizing their vision models, combining computer vision
and natural language processing (NLP) to process and understand images
alongside text. The request includes the image URL, the desired
description length, the vision model utilized, and the languages for the
description. 

Then, Together AI takes this data and uses one of its Llama3 vision
models to scan the image and generate a description that matches the
specified requirements, and returns the *product description* to the
application.

Finally, the product along with its description will be upserted inside
the catalog on MongoDB, ensuring real-time availability across all
connected systems.

To illustrate the scalability of this architecture, consider the diagram
below. By integrating `MongoDB Change Streams
<https://www.mongodb.com/docs/manual/changeStreams/>`__, it allows
real-time updates on any application listening to the catalog. For
example, the e-commerce portal, a social media platform, and any other
touchpoints.

.. figure:: /includes/images/industry-solutions/product-description-architecture-extended.svg
   :figwidth: 1200px
   :alt: Product description architecture diagram with real-time integration
   
   Figure 2. Product description generative AI architecture with real-time applications

Building the Solution
---------------------

Building this solution can be broken down in five major steps:

.. procedure::
   :style: normal

   .. step:: Replicate the Demo Database

      Provision a cluster within your `Atlas account
      <https://www.mongodb.com/cloud/atlas/register>`__ and populate
      your database with the data required for the demo. You can quickly
      replicate the database using a data dump found in the `github
      repository
      <https://github.com/mongodb-industry-solutions/description-generator/tree/main/resources/dump/TogetherMDB>`__
      with a single `mongorestore
      <https://www.mongodb.com/docs/database-tools/mongorestore/>`__
      command.

   .. step:: Retrieve MongoDB Atlas Connection String

      Navigate to your cluster and click on *Connect*. Copy the
      connection string provided and save it for your .env file.

   .. step:: Create Your Together AI Account

      Sign in to `Together AI <https://www.together.ai/>`__. Navigate to
      your account and retrieve your user key, which can be found inside
      your *Profile*, then go to *Settings* and select *API Keys*. Save this
      key, as you will need it in your .env file.

   .. step:: Create Your Object Storage

      Create a new bucket in your AWS account and generate an IAM user
      with programmatic access. Save the access key and secret key for
      your .env file.

   .. step:: Configure Your Application’s Frontend

      Obtain the demo code by cloning the GitHub repository to your
      local machine, configure the environment variables and install the
      dependencies. Finally, run the app locally at
      http://localhost:3003.

For complete implementation details, including code samples,
configuration files, and tutorial videos, visit the `GitHub repository
<https://github.com/mongodb-industry-solutions/description-generator>`__.

Key Learnings
-------------

- **High-quality product descriptions drive business success:** A
  well-crafted product description enhances user engagement, improves
  SEO rankings with increased views, and helps customers make more
  informed purchase decisions. 

- **Leverage MongoDB and Together AI to automate product descriptions:**
  By combining MongoDB’s flexible and scalable database with Together
  AI’s available vision models, retailers are able to automate real-time
  product description generation that aligns with their business needs. 

- **Modern architectures speed up time to market:** Streamlining the 
  product onboarding process with AI and automation reduces manual
  effort and speeds up approvals. Using a generative AI for product
  descriptions maintains consistent UX and tone, enabling quick
  scalability for expanding product catalogs with little extra effort.

Together, these capabilities form a robust generative AI system that
scales with your business needs while ensuring efficiency and
reliability.

Technologies and Products Used
------------------------------

MongoDB Developer Data Platform
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- `Atlas Database <https://www.mongodb.com/atlas/database>`__

Partner Technologies
~~~~~~~~~~~~~~~~~~~~

-  `Next.js <https://nextjs.org/>`__.
-  `Together AI <https://www.together.ai/>`__.

Authors
-------

- Angie Guemes, MongoDB
- Prashant Juttukonda, MongoDB