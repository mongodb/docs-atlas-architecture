.. _arch-center-is-product-description:

===================================================
Automating Product Descriptions Using Generative AI
===================================================

.. facet::
   :name: genre
   :values: tutorial

.. meta:: 
   :keywords: document model, retail, together AI, gen AI :description:
   Discover how to build a generative AI system with MongoDB and
   Together AI to automate writing product descriptions.
   
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

MongoDB and Together AI deliver generative AI-powered solutions for
writing multilingual product descriptions, enabling faster product
onboarding.

**Use cases:** `Gen AI
<https://www.mongodb.com/use-cases/artificial-intelligence>`__, `Catalog
<https://www.mongodb.com/solutions/use-cases/catalog>`__, 

**Industries:** `Retail
<https://www.mongodb.com/solutions/industries/retail>`__

**Products:** `MongoDB Atlas <http://mongodb.com/atlas>`__, `Document
Model <https://www.mongodb.com/docs/manual/core/document/>`__, `MongoDB
Node.js Driver <https://www.mongodb.com/docs/drivers/node/v3.6/>`

**Partners:** `Together AI
<https://cloud.mongodb.com/ecosystem/together-ai>`

Solution Overview
-----------------

In this solution, you will learn how to build a generative AI-powered
architecture that processes images using advanced vision models,
generating accurate and compelling descriptions of an image. MongoDB
Atlas serves as the operational data layer, leveraging its flexible data
model to scale seamlessly as new descriptions are added and ensuring
efficient data management and effortless scalability.

This solution proves particularly valuable in the retail industry. The
process of onboarding a new product to a retailer’s catalog can be
time-consuming, especially when it comes to crafting product
descriptions—in multiple languages and in different geographies. This
solution helps streamline that workflow by automating the initial
content creation through `generative AI
<https://www.mongodb.com/resources/basics/artificial-intelligence/generative-ai>`__,
providing retailers with a solid foundation for each product
description, ultimately speeding up the time to market and improving
consistency across their catalog UX writing.

.. video:: https://www.youtube.com/watch?v=7fKXd-KafLw

Our solution explores the application of AI in real-time anomaly detection
using sound input, highlighting the impact of MongoDB Atlas Vector Search.
This approach offers several benefits:

The importance of a good description
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Did you know that around `70% of people leave a product page when the
product description is poor or incomplete?
<https://www.businessdasher.com/importance-of-product-description/?utm_source=chatgpt.com>`__ 

Product descriptions play a crucial role in the customer's journey.
Shoppers rely on them to make buying decisions. When descriptions are
weak or missing, businesses risk losing potential revenue and leaving
customers frustrated.

Having a great description can enhance user engagement and satisfaction
as `87% of online shoppers consider product descriptions to be crucial
when making a buying decision.
<https://www.businessdasher.com/importance-of-product-description/?utm_source=chatgpt.com>`__
On the other hand, having inaccurate descriptions can result in revenue
loss and trust decline with your customer base as `40% of consumers have
returned online purchases due to poor product content.
<https://www.ax-semantics.com/en/blog/product-descriptions>`__

Challenges with the traditional product description writing process
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The journey of writing high-quality descriptions involves numerous
details and careful considerations. Some of the challenges that present
include:

- **Crafting compelling descriptions:** A product description that is
  well-written will address their target’s needs and desires while
  maintaining a consistent tone that aligns with the business’s UX writing
  strategy and brand identity.

- **SEO optimization:** Creating SEO-optimized product descriptions to
  drive organic traffic and improve search engine rankings.

- **Multilingual complexity:** For retailers with multilingual portals
  and with multiple operating geographies this process increases in
  complexity.
  
- **Content approval delays:** Even after a description is written, too
  often there is still a writing approval process that needs to happen,
  delaying the time to market.


Reference Architectures
-----------------------

**With MongoDB**: The solution demo is divided in two parts:

Audio Preparation
~~~~~~~~~~~~~~~~~

We begin by capturing the audio from the equipment in different situations
(normal operation, high/low load, equipment obstructed, not operating).

Once each sound is collected, we use an embedding model to process the audio
data and convert it to vector embeddings (numerical representations of data).
This step is crucial — by generating embeddings for each audio track, which are
high-dimensional vector representations, we are essentially capturing the unique
characteristics of the sound.

We then upload these vectors to MongoDB Atlas, which is where the vector search
magic begins. With just a few examples of sounds in our database, they are ready
to be searched (and essentially compared) with the sound emitted by our
equipment during its operation in real-time.

Audio-Based Diagnosis
~~~~~~~~~~~~~~~~~~~~~

Next we put our equipment through normal operation and start capturing the sound
it is making in real time. In this demonstration we capture one-second clips of
audio. Then, with the same embedding model used before, we take our audio clips
and convert them to vector embeddings in real-time. This process happens in
milliseconds, allowing us to have real-time monitoring of the audio. The
one-second audio clips now converted to vector embeddings are then sent to
MongoDB Atlas Vector Search. At this step, the Atlas Vector Search algorithm
searches for what is the most similar sound from the ones we previously recorded
in our audio preparation phase. The result is given back with a percentage of
similarity and it enables a very accurate diagnosis of the current status of the
operation of the wind turbine.

These steps are performed repeatedly every second, leveraging fast embedding of
vector data and quick searches, allowing for real-time monitoring based on
sound.

.. figure:: /includes/images/industry-solutions/Wind-Turbine-Diagnosis-Demo.svg
   :figwidth: 1200px
   :alt: Real-time wind turbine diagnosis
   
   Real-time wind turbine diagnosis by analyzing the emitted audio, allowing us to
   diagnose its status — whether it's operating normally, stopped, or experiencing
   any issues.

Data Model Approach
-------------------

The data model for the vectorized audio collection is simple, we have our audio
preparation collection called “sounds,” which contains documents including a
status and the url of the related GIF to be displayed on the UI. Once the
reference audio for each status is vectorized, the embedding is added to the
document as an array alongside existing fields.

.. figure:: /includes/images/industry-solutions/wind-diagnosis.svg
   :figwidth: 1200px
   :alt: Screenshot of documents including a status and the url of the related GIF to be displayed on the UI.

On the reading end, the one-second audio clips we record in real-time are
vectorized and sent to MongoDB Atlas Vector Search to be compared against
embeddings from the “sounds” collection above.

Building the Solution
---------------------

.. procedure::
   :style: normal

   .. step:: `MongoDB Atlas Connection <https://github.com/mongodb-industry-solutions/Wind-Turbine-Diagnostics/blob/main/README.md#1-mongodb-atlas-connection>`__

      Create a file called .env in the main directory alongside the add_audio.py file
      and add your atlas connection string in the following format:

      MONGO_CONNECTIO_STRING="mongodb+srv://connectionstringfromatlas"

      Then copy this file into the nodeUI directory.

   .. step:: `Install Python Modules <https://github.com/mongodb-industry-solutions/Wind-Turbine-Diagnostics/blob/main/README.md#2-install-python-modules>`__

      Install the required python modules listed in the Github repo.

   .. step:: `Record Audio Files <https://github.com/mongodb-industry-solutions/Wind-Turbine-Diagnostics/blob/main/README.md#3-record-audio-files>`__

      1. Run python3 add_audio.py
      2. Select the audio input by typing the relevant number and then press enter. Record each sound in sequence.

   .. step:: `Create a Search Index <https://github.com/mongodb-industry-solutions/Wind-Turbine-Diagnostics/blob/main/README.md#4-create-a-search-index>`__

      Go to MongoDB Atlas and create an Atlas Search Index in the audio database
      sounds collection using the content of searchindex.json.

      .. code-block:: sh

         {
            "mappings": {
               "dynamic": true,
               "fields": {
                  "emb": {
                     "dimensions": 2048,
                     "similarity": "cosine",
                     "type": "knnVector"
                  }
               }
            }
         }

   .. step:: `Query the Database <https://github.com/mongodb-industry-solutions/Wind-Turbine-Diagnostics/blob/main/README.md#5-query-the-database>`__

      Run python3 live_query.py and place your microphone next to the fan.

   .. step:: `Run the Frontend <https://github.com/mongodb-industry-solutions/Wind-Turbine-Diagnostics/blob/main/README.md#6-run-the-frontend>`__

      1. Switch to a new console and cd to the 'nodeUI' directory.
      2. Run ``npm install``
      3. Run ``node nodeui.js``
      4. Use a browser to open the link http://localhost:3000/

Key Learnings
-------------

- Understand the role of AI and machine learning in revolutionizing predictive
  maintenance in the renewable energy industry.
- Explore how MongoDB Atlas Vector Search facilitates real-time anomaly
  detection and addresses challenges faced by businesses and development teams.
- Creation of a Vector Search index in Atlas — It is now possible to create
  indexes for `local deployments
  <https://www.mongodb.com/docs/atlas/cli/stable/atlas-cli-deploy-local/#std-label-atlas-cli-deploy-local-avs>`__. 
  
Technologies and Products Used
------------------------------

**MongoDB developer data platform:**

- `Atlas Database <https://www.mongodb.com/atlas/database>`__
- `Atlas Vector Search
  <https://www.mongodb.com/products/platform/atlas-vector-search>`__

**Partner technologies:**

- Audio embedding generation with `panns-inference
  <https://github.com/qiuqiangkong/panns_inference>`__.


Authors
-------

- Ainhoa Múgica, MongoDB
- Arnaldo Vera, MongoDB
- Dr. Humza Akhtar, MongoDB
- Dr. Han Heloir, MongoDB
- Ralph Johnson, MongoDB