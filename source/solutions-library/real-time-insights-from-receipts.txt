.. _arch-center-is-digital-receipts:

===========================================
Real-Time Personalization with Receipt Data
===========================================

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: retail, personaliztion, ecommerce, single view, modernization
   :description: Discover how to turn receipt data into real-time insights that power personalized experiences.
   
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Make receipts a growth engine with the document model and AI insights
powered by MongoDB.

**Use cases:** `Modernization <https://www.mongodb.com/solutions/use-cases/modernize>`__, 
`Personalization <https://www.mongodb.com/solutions/use-cases/catalog>`__,
`Single View <https://www.mongodb.com/solutions/use-cases/single-view>`__ 

**Industries:** `Retail <https://www.mongodb.com/solutions/industries/retail>`__

**Products:** `MongoDB Atlas <http://mongodb.com/atlas>`__, 
`MongoDB Atlas Triggers <https://www.mongodb.com/docs/atlas/atlas-ui/triggers/>`__,
`MongoDB Atlas Vector Search <https://www.mongodb.com/products/platform/atlas-vector-search>`
`MongoDB Change Streams <https://www.mongodb.com/docs/manual/changeStreams/>`__,
`Voyage AI <https://www.voyageai.com/>`__ 

**Partners:** `Microsoft Azure <https://azure.microsoft.com/en-us/pricing/purchase-options/azure-account/>`__

Solution Overview
-----------------

We’re in a digital era where manual, paper-based processes are rapidly
being replaced by automation and personalization. One example is the
shift toward digital receipts, which are becoming the industry standard
and are opening new opportunities for tailored customer experiences.

Retailers that embrace this transformation gain a competitive advantage
by unlocking the value of their data. Digital receipts provide rich,
actionable insights that can be used to power personalized product
recommendations. Data is power, and businesses that can effectively
store, access, and activate their data are better positioned to
differentiate themselves from the competition. 

This document explores how retailers can leverage MongoDB to store and
manage digital receipt data to deliver personalized product
recommendations and enhance the post shopping experience. You'll learn
about common challenges in managing receipt data and how MongoDB
simplifies access and activation for real-time, customer-centric
experiences.

.. video:: https://youtu.be/42M-ftLc-F8?si=vnu4yjT_41q5i_KO 

Transform Transaction Data into Actionable Value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When a customer shops in a physical store, offering a digital receipt
becomes a strategic touchpoint. Retailers can use these receipts to
feature tailored suggestions and as a link to online shopping.

And when moving to the online experience, whether through a mobile app
or login through a browser, customers receive personalized product
recommendations based on their complete purchase history. This ensures
customers keep their loyalty benefits across all channels, while
enjoying a personalized experience powered by a unified 360° customer
journey.

.. figure:: /includes/images/industry-solutions/digital-receipts-fig1.svg
   :figwidth: 1200px
   :alt: digital receipts connect in-store and online journeys with real-time AI-powered recommendations
   
   Figure 1. With MongoDB, digital receipts connect in-store and online
   journeys with real-time AI-powered recommendations, enabling a 360°
   customer experience

Digital receipts provide businesses access to a range of strategic
advantages, including:

- **Enhancing customer engagement through personalized experiences:**
  With transaction data, retailers can tailor marketing efforts such as
  delivering smart product recommendations, sharing personalized offers,
  and running targeted ad campaigns. 

- **Unlocking valuable customer insights:** By analyzing behavior and
  preferences at scale.

- **Reducing operational costs:** By eliminating the need to print,
  store, and manage paper receipts. 

Data Management Challenges and How MongoDB Can Solve Them
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Managing receipt data can be difficult. Let’s explore the key obstacles
and how MongoDB can help overcome them. 

Siloed Data and No Single Source of Truth
`````````````````````````````````````````

Retailers often store multiple copies of sales data across disconnected
third-party tools, leading to limited visibility and fragmented
information that's hard to analyze, or activate. MongoDB addresses this
challenge by acting as a centralized, `flexible data platform
<https://www.mongodb.com/atlas>`__ that consolidates data from multiple
systems. It simplifies integration, breaks down silos and creates a
unified operational data layer that supports real-time data analysis for
actionable insights.

Sales Receipt Data Is Complex
`````````````````````````````

Sales data often comes from legacy systems and is stored in complex,
high-volume formats like XML, which are deeply nested and inconsistent.
In :abbr:`RDBMS (Relational Database Management Systems)`, architects
must spread the data in multiple tables to handle that complexity.
Instead, MongoDB uses its `flexible document model
<https://www.mongodb.com/resources/basics/flexible-data-model>`__ to
adapt to the data, not the other way around. This capability enables
faster development and easy schema changes, such as adding fields for
personalized recommendations, at any time with no downtime.

Rapid Data Scaling
``````````````````

Retailers generate massive volumes of receipt data every day and systems
must keep up. For example, `Albert Heijn, the largest supermarket chain
in the Netherlands
<https://www.mongodb.com/solutions/customer-case-studies/albert-heijn>`__,
uses MongoDB to run over 50 microservices, including their digital
receipts, processing over one million transactions daily. MongoDB
auto-scales, supports sharding and replica sets for high availability,
and enables workload isolation for real-time AI, reporting, or analytics
without impacting core application.

Customer Privacy
````````````````

Receipts often contain personal customer data making security and
compliance essential. MongoDB supports secure and compliant data
handling with robust, built-in enterprise security features and data
privacy. Including full lifecycle `data encryption
<https://www.mongodb.com/products/capabilities/security/encryption>`__,
:abbr:`RBAC (Role-based Access Control)`, and auditing. In addition,
`zone sharding
<https://www.mongodb.com/docs/manual/core/zone-sharding/>`__ allows you
to store data in your chosen region, supporting compliance and
performance across regions.

Unlocking Real-time Insights from Receipt Data
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

We created a proof of concept using MongoDB Atlas as the central data
store, demonstrating how retailers can turn receipt data into real-time
value by storing and activating operational data. In this proof of
concept, we built a backend microservice to handle invoice creation for
a mock e-commerce system. This service can be extended to work with data
from physical store systems. 

In this demo solution, you’ll learn how MongoDB creates a unified
operational view by combining operational and AI data. This approach
gives businesses full control over their data and keeps it accessible
for downstream use. 

As seen in the visual below, this solution uses receipt data to generate
real-time product recommendations for each order and includes them in
the digital receipt. These recommendations also appear on the user’s
homepage, enhancing their personalized post-shopping experience.

.. figure:: /includes/images/industry-solutions/digital-receipts-gif1.gif
   :figwidth: 1200px
   :alt: A mock e-commerce platform offering personalized product recommendations in digital receipts
   
   Figure 2. A mock e-commerce platform offering personalized product
   recommendations in digital receipts

Reference Architectures
-----------------------

With MongoDB
~~~~~~~~~~~~

At the core of this architecture we have three key components: 

- `MongoDB Atlas
  <https://www.mongodb.com/products/platform/atlas-database>`__: A
  powerful, general-purpose data platform that
  seamlessly manages our data in the cloud. MongoDB's flexible document
  model allows products to scale easily by adding more descriptions
  (i.e. for translations in multiple languages) without introducing
  complexity. 

- **The object storage:** An effective system for efficient product image
  file storage and retrieval. This can be built with Google Cloud
  storage, Azure Blob Storage or AWS S3. 

- `Together AI <https://www.together.ai/>`__: Offers a variety of
  generative AI services, making it easy to run or fine-tune leading
  open source models with only a few lines of code. This solution uses
  their available `vision LLMs <https://www.together.ai/models>`__ to
  generate the product descriptions.

.. figure:: /includes/images/industry-solutions/product-description-architecture.svg
   :figwidth: 1200px
   :alt: Product description architecture diagram
   
   Figure 1. Product description generative AI architecture

The journey starts on the left side of the diagram with the *User/Event*
label. A laptop icon represents the “Product Description Generator”
system. First, a new product is received, this can be added manually by
a user or in bulk through an automated event. 

Then, retailers generate the descriptions by sending a *query* to Together
AI’s endpoint, utilizing their vision models, combining computer vision
and natural language processing (NLP) to process and understand images
alongside text. The request includes the image URL, the desired
description length, the vision model utilized, and the languages for the
description. 

Then, Together AI takes this data and uses one of its Llama3 vision
models to scan the image and generate a description that matches the
specified requirements, and returns the *product description* to the
application.

Finally, the product along with its description will be upserted inside
the catalog on MongoDB, ensuring real-time availability across all
connected systems.

To illustrate the scalability of this architecture, consider the diagram
below. By integrating `MongoDB Change Streams
<https://www.mongodb.com/docs/manual/changeStreams/>`__, it allows
real-time updates on any application listening to the catalog. For
example, the e-commerce portal, a social media platform, and any other
touchpoints.

.. figure:: /includes/images/industry-solutions/product-description-architecture-extended.svg
   :figwidth: 1200px
   :alt: Product description architecture diagram with real-time integration
   
   Figure 2. Product description generative AI architecture with real-time applications

Building the Solution
---------------------

Building this solution can be broken down in five major steps:

.. procedure::
   :style: normal

   .. step:: Replicate the demo database

      Provision a cluster within your `Atlas account
      <https://www.mongodb.com/cloud/atlas/register>`__ and populate
      your database with the data required for the demo. You can quickly
      replicate the database using a data dump found in the `github
      repository
      <https://github.com/mongodb-industry-solutions/description-generator/tree/main/resources/dump/TogetherMDB>`__
      with a single `mongorestore
      <https://www.mongodb.com/docs/database-tools/mongorestore/>`__
      command.

   .. step:: Retrieve MongoDB Atlas connection string

      Navigate to your cluster and click on *Connect*. Copy the
      connection string provided and save it for your .env file.

   .. step:: Create your Together AI account

      Sign in to `Together AI <https://www.together.ai/>`__. Navigate to
      your account and retrieve your user key, which can be found inside
      your *Profile*, then go to *Settings* and select *API Keys*. Save this
      key, as you will need it in your .env file.

   .. step:: Create your object storage

      Create a new bucket in your AWS account and generate an IAM user
      with programmatic access. Save the access key and secret key for
      your .env file.

   .. step:: Configure your application frontend

      Obtain the demo code by cloning the GitHub repository to your
      local machine, configure the environment variables and install the
      dependencies. Finally, run the app locally at
      http://localhost:3003.

For complete implementation details, including code samples,
configuration files, and tutorial videos, visit the `GitHub repository
<https://github.com/mongodb-industry-solutions/description-generator>`__.

Key Learnings
-------------

- **High-quality product descriptions drive business success:** A
  well-crafted product description enhances user engagement, improves
  SEO rankings with increased views, and helps customers make more
  informed purchase decisions. 

- **Leverage MongoDB and Together AI to automate product descriptions:**
  By combining MongoDB’s flexible and scalable database with Together
  AI’s available vision models, retailers are able to automate real-time
  product description generation that aligns with their business needs. 

- **Modern architectures speed up time to market:** Streamlining the 
  product onboarding process with AI and automation reduces manual
  effort and speeds up approvals. Using a generative AI for product
  descriptions maintains consistent UX and tone, enabling quick
  scalability for expanding product catalogs with little extra effort.

Together, these capabilities form a robust generative AI system that
scales with your business needs while ensuring efficiency and
reliability.

Technologies and Products Used
------------------------------

MongoDB Developer Data Platform
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- `Atlas Database <https://www.mongodb.com/atlas/database>`__

Partner Technologies
~~~~~~~~~~~~~~~~~~~~

-  `Next.js <https://nextjs.org/>`__
-  `Together AI <https://www.together.ai/>`__

Authors
-------

- Angie Guemes, MongoDB
- Prashant Juttukonda, MongoDB