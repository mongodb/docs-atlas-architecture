.. _arch-center-is-rfid-retail:

================================
RFID: Real-Time Product Tracking
================================

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: document model, retail, tracking, analytics, catalog 
   :description: Learn how to build a real-time inventory management system with RFID and MongoDB Atlas.
   
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Enhance retail inventory management with Radio Frequency Identification
(RFID) Technology and MongoDB Atlas for real-time tracking, improved
accuracy, and data-driven insights across your supply chain.

**Use cases:** `Catalog <https://www.mongodb.com/use-cases/catalog>`__,
`Personalization <https://www.mongodb.com/solutions/use-cases/personalization>`__ 

**Industries:** `Retail <https://www.mongodb.com/solutions/industries/retail>`__

**Products:** `MongoDB Atlas <http://mongodb.com/atlas>`__

Solution Overview
-----------------

Retailers must ensure accurate and consistent inventory information
across multiple channels while handling vast amounts of data. However,
traditional methods struggle to keep pace with the demands of today's
dynamic market.

In this scenario, RFID Technology offers a transformative solution. By
automatically tracking tagged items using electromagnetic fields,
retailers gain unprecedented real-time visibility into inventory levels.
This implementation optimize stock management, reduce labor
costs, and elevate customer satisfaction.

Harnessing RFID's potential requires a robust data layer. MongoDB Atlas
provides the solution for capturing, processing, and analyzing these
massive datasets.

**Key benefits**

- **Inventory accuracy:** Eliminate stock discrepancies and reduce
  out-of-stocks, ensuring products are where customers expect them to be.

- **Operational efficiency:** Streamline processes like receiving,
  picking, and packing, leading to faster turnaround times and cost
  savings.

- **Enhanced customer experience:** Fulfill orders accurately and
  quickly, boosting customer satisfaction and loyalty.

- **Data-driven insights:** Leverage detailed product and sales data to make
  informed business decisions and optimize product assortment.

By adopting RFID and complementing it with a powerful database solution,
retailers can overcome the challenges of product information management
and achieve a competitive advantage.

.. video:: https://www.youtube.com/watch?v=xK2RHBcpZXc

Reference Architectures
-----------------------

By attaching RFID tags to products and utilizing a network of readers,
businesses can accurately track items from the manufacturing floor to
the end consumer. Below, we'll explain the general architecture of an
RFID system and then provide a specific example using Zebra
Technologies.

Supply Chain Tracking with RFID
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This architecture outlines a comprehensive system for monitoring product
movement throughout the supply chain using RFID technology. MongoDB
Atlas serves as the underlying data layer for managing and analyzing
RFID data.

Key Components and Functions
````````````````````````````

- **RFID data collection:** Information is captured from RFID tags
  attached to products using RFID readers.

- **Data management:** MongoDB Atlas stores and processes collected RFID
  data.

- **Data analysis:** The system utilizes MongoDB Atlas to extract
  valuable insights from the data through data cleaning, transformation,
  and analysis.

- **Workflow optimization:** The architecture visualizes the data flow
  from initial collection to the generation of actionable insights.

.. figure:: /includes/images/industry-solutions/rfid-product-architecture.svg
   :figwidth: 1200px
   :alt:  End-to-end supply chain RFID tracking architecture
   
   Figure 1.  End-to-end supply chain RFID tracking architecture

RFID Product Tracking Implementation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

With the help of an RFID product tracking architecture, we aim to
showcase an example that integrates the Zebra Technologies 123RFID app
with the Atlas developer data platform using an API gateway.

**Key Components and Functionalities**

- **RFID data capture:** The Zebra Technologies 123RFID app collects product
  information via RFID tags.

- **Data integration:** An API gateway seamlessly transfers RFID data
  from the app to MongoDB Atlas.

- **Data storage and analysis:** MongoDB Atlas serves as the central
  repository for RFID data, enabling comprehensive data analysis.

.. figure:: /includes/images/industry-solutions/rag-chatbot-architecture.svg
   :figwidth: 1200px
   :alt: Example of a RFID product architecture with Atlas and Zebra Technologies
   
   Figure 2. Example of a RFID product tracking architecture based on the integration of Zebra Technologies with Atlas 

Building the Solution
---------------------

Building this solution can be broken down in four major steps:

.. procedure::
   :style: normal

   .. step:: Replicate the Demo Database

      You can either use a publicly hosted, pre-populated cluster or
      provision your own cluster within your Atlas account and populate
      your database with the required data for the demo. If you choose
      to bring your own MongoDB, a data dump can be found `inside the
      repository
      <https://github.com/mongodb-industry-solutions/retail-store-v2/tree/main/dump/leafy_popup_store>`__
      to quickly replicate the database with all the necessary data and
      metadata with one quick `mongorestore
      <https://www.mongodb.com/docs/database-tools/mongorestore/>`__
      command.

   .. step:: Create Dataworkz RAG Application

      Sign up to Dataworkz and create a RAG app for the e-commerce
      policies. You can use the PDF `inside the repository
      <https://github.com/mongodb-industry-solutions/retail-store-v2/blob/main/resources/LeafyCorpPolicy.pdf>`__
      to use as the e-commerce policy document. This is the unstructured
      data that can be made available as a tool to a Dataworkz Agent.

   .. step:: Create the Dataworkz Agent

      Connect to your MongoDB cluster provisioned at the previous step.
      Follow `this guide
      <https://github.com/mongodb-industry-solutions/retail-store-v2/blob/main/resources/chatbot/README.md>`__
      to learn the configuration required by the Dataworkz connector to
      access MongoDB. After that, create a MongoDB tool and a Dataworkz
      agent and test the agent.

   .. step:: Configure Your Application’s Frontend

      Obtain the demo code by cloning the `GitHub repository
      <https://github.com/mongodb-industry-solutions/retail-store-v2>`__
      to your local machine, configure the environment variables and
      install the dependencies. Finally, run the app locally at
      http://localhost:8080.

For complete implementation details, including code samples,
configuration files, and tutorial videos, visit the `GitHub repository
<https://github.com/mongodb-industry-solutions/retail-store-v2>`__. 

Key Learnings
-------------

- **Understanding agentic RAG:** Incorporating agents will broaden the
  possibilities of what can be done with the conventional RAG
  architecture. Adding a layer of decision-making enables agents to plan,
  take action and utilize their tools to ensure a higher degree of
  contextual understanding and operational efficiency.

- **Technical integration:** By combining the strengths of MongoDB and
  Dataworkz, retailers gain the power to build stronger features—whether
  it’s offering a more personalized experience or providing their
  customers with real-time smart assistance. Their seamless integration
  will speed up the development process and allow teams to focus on
  creating more differentiated features that will boost your position as
  leaders in the market.

- **Future of retail with AI:** Applying RAG architecture into retail use
  cases will enhance the customer’s shopping journey by delivering more
  context-aware support and personalized content. 

- **Rapid prototyping and iteration:** Agentic RAG is an iterative process
  of testing and validation, and it requires quick turnaround times in
  order to be able to move rapidly through prototyping and production. The
  ability to configure multiple versions of the different components of
  the agentic RAG pipeline, understand and measure their impact, and
  promote to production in a governed fashion is a key consideration in
  choosing a platform.

Technologies and Products Used
------------------------------

MongoDB Developer Data Platform
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- `MongoDB Atlas <https://www.mongodb.com/atlas>`__

Additional Technologies
~~~~~~~~~~~~~~~~~~~~~~~

- `Zebra Technologies 123RFID app <https://www.zebra.com/gb/en/support-downloads/software/rfid-software/123rfid-mobile.html>`__
- `Zebra RFID readers/scanners <https://www.zebra.com/us/en/products/rfid.html>`__

Authors
-------

- Francesco Baldissera, MongoDB
- Pedro Bereilh, MongoDB
- Rami Pinto, MongoDB
- Sebastian Rojas Arbulu, MongoDB
- Mehar Grewal, MongoDB
- Prashant Juttukonda, MongoDB