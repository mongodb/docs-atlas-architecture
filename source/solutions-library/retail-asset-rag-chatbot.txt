.. _arch-center-is-rag-chatbot:

===========================================================
Launching an Agentic RAG Chatbot with MongoDB and Dataworkz
===========================================================

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: document model, retail, chatbot, rag architecture, gen AI 
   :description: Discover how to leverage agentic AI using MongoDB and Dataworkz to enhance retail experiences.
   
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Leverage agentic RAG using MongoDB and Dataworkz to enhance customers’
shopping experiences with a personalized chatbot.

**Use cases:** `Gen AI
<https://www.mongodb.com/use-cases/artificial-intelligence>`__,
`Personalization
<https://www.mongodb.com/solutions/use-cases/personalization>`__ 

**Industries:** `Retail
<https://www.mongodb.com/solutions/industries/retail>`__

**Products:** `MongoDB Atlas <http://mongodb.com/atlas>`__, `MongoDB
Atlas Vector Search
<https://www.mongodb.com/products/platform/atlas-vector-search>`__

**Partners:** `Dataworkz
<https://cloud.mongodb.com/ecosystem/dataworkz>`__

Solution Overview
-----------------

The retail industry is always at the forefront of trends, quickly
embracing innovation. With the rise of technologies like generative AI
and agents, retailers have enthusiastically adopted them for various use
cases. A few examples include offering real-time assistance,
personalizing customer experiences, and enhancing search results. This
is transforming the way brands connect with customers in meaningful
ways.

Recent studies reveal that `AI-powered chatbots boost online sales in
the United States by nearly 4% year-over-year
<https://www.reuters.com/business/retail-consumer/ai-influenced-shopping-boosts-online-holiday-sales-salesforce-data-shows-2025-01-06/>`__,
reinforcing the idea that AI is not just a trend but a lasting driver of
growth in retail. Today, we will explore agentic RAG (retrieval
augmented generation), a cutting-edge technology that can further
revolutionize this retail space. We will also take a closer look at how
a solution that leverages MongoDB and Dataworkz combines operational and
unstructured data to drive transformative customer experiences.

Before we jump in let’s understand a few concepts that help us set the
context for this solution.  

What Is an Agent?
~~~~~~~~~~~~~~~~~

An agent is an artificial computational entity with an **awareness of
its environment and associated data within the context**. These agents
can be used to interact in the case of ecommerce or perform a portion of
complex tasks as needed.

Retrieval-Augmented Generation (RAG)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

`Retrieval-augmented generation
<https://www.mongodb.com/resources/basics/artificial-intelligence/retrieval-augmented-generation>`__
is an approach used to augment `large language models
<https://www.mongodb.com/resources/basics/artificial-intelligence/large-language-models>`__
(LLMs) with proprietary data so that they can generate more accurate and
context-aware responses while also reducing hallucinations. 

.. figure:: /includes/images/industry-solutions/rag-chatbot-conventional.svg
   :figwidth: 1200px
   :alt: Description of a conventional RAG architecture
   
   Figure 1. Conventional RAG

Agentic RAG
~~~~~~~~~~~

Agentic RAG takes this a step further by introducing an AI agent-based
implementation of RAG. In this model, different tools and functions can
be accessed by the agent, enabling it to go beyond information retrieval
and generation—it allows it to plan. Agents can determine if they need
to retrieve specific information or not, decide which tool to use for
the retrieval, and formulate queries. These capabilities are crucial as
it enables the agent to pull information from multiple data sources,
handling complex queries that require more than one source to formulate
the response.

You can start to picture the enormous potential it has across industries
to enhance customer interactions and streamline processes. 

.. figure:: /includes/images/industry-solutions/rag-chatbot-agentic.svg
   :figwidth: 1200px
   :alt: Description of an agentic RAG architecture
   
   Figure 2. Agentic RAG

For more details see `Dataworkz Agentic RAG
<https://www.dataworkz.com/agentic-rag/>`__.

.. figure:: /includes/images/industry-solutions/rag-chatbot-table.svg
   :figwidth: 1200px
   :alt: Comparison between a conventional and an agentic RAG architecture
   
   Figure 3. Conventional vs Agentic RAG comparison

Impact on the Retail Industry
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Generative AI is revolutionizing the retail industry. `In 2024, one
quarter of consumers used AI in their shopping experience, representing
a 4% increase over the previous year
<https://www.capgemini.com/wp-content/uploads/2025/01/Consumer-trends14012025.pdf>`__.
With such expansion, the potential for innovation remains vast.

Some generative AI  use cases across retail include: 

- **Building customer-support chatbots:** Imagine a real-time, GenAI-powered support
  chatbot that is able to assist customers at any point in time and is
  context aware of the business’s policies as well as the user’s history
  and preferences. 

- **Personalizing product recommendations:** Providing the
  customer with recommendations based on their specific likes, needs,
  and past orders will make the shopping experience more targeted to the
  shopper making it more enjoyable and likely to end with a purchase.

- **Creating dynamic marketing content:** Generating fresh, relevant content
  for the customer by creating dynamic promotions, emails or messages
  specific for the customer. This leads to higher engagement, increased
  sales, and better customer retention.

All of the examples above show how, in everyday life, MongoDB and
Dataworkz are already supporting retailers to build impactful customer
experiences.

Reference Architectures
-----------------------

**With MongoDB**:

At the core of this architecture we have three key components: 

- `MongoDB Atlas
  <https://www.mongodb.com/products/platform/atlas-database>`__: A
  powerful, general-purpose data platform that
  seamlessly manages our data in the cloud. MongoDB's flexible document
  model allows products to scale easily by adding more descriptions
  (i.e. for translations in multiple languages) without introducing
  complexity. 

- The object storage: An effective system for efficient product image
  file storage and retrieval. This can be built with Google Cloud
  storage, Azure Blob Storage or AWS S3. 

- `Together AI <https://www.together.ai/>`__: Offers a variety of
  generative AI services, making it easy to run or fine-tune leading
  open source models with only a few lines of code. This solution uses
  their available `vision LLMs <https://www.together.ai/models>`__ to
  generate the product descriptions.

.. figure:: /includes/images/industry-solutions/product-description-architecture.svg
   :figwidth: 1200px
   :alt: Product description architecture diagram
   
   Figure 1. Product description generative AI architecture

The journey starts on the left side of the diagram with the *User/Event*
label. A laptop icon represents the “Product Description Generator”
system. First, a new product is received, this can be added manually by
a user or in bulk through an automated event. 

Then, retailers generate the descriptions by sending a *query* to Together
AI’s endpoint, utilizing their vision models, combining computer vision
and natural language processing (NLP) to process and understand images
alongside text. The request includes the image URL, the desired
description length, the vision model utilized, and the languages for the
description. 

Then, Together AI takes this data and uses one of its Llama3 vision
models to scan the image and generate a description that matches the
specified requirements, and returns the *product description* to the
application.

Finally, the product along with its description will be upserted inside
the catalog on MongoDB, ensuring real-time availability across all
connected systems.

To illustrate the scalability of this architecture, consider the diagram
below. By integrating `MongoDB Change Streams
<https://www.mongodb.com/docs/manual/changeStreams/>`__, it allows
real-time updates on any application listening to the catalog. For
example, the e-commerce portal, a social media platform, and any other
touchpoints.

.. figure:: /includes/images/industry-solutions/product-description-architecture-extended.svg
   :figwidth: 1200px
   :alt: Product description architecture diagram with real-time integration
   
   Figure 2. Product description generative AI architecture with real-time applications

Building the Solution
---------------------

Building this solution can be broken down in five major steps:

.. procedure::
   :style: normal

   .. step:: Replicate the Demo Database

      Provision a cluster within your `Atlas account
      <https://www.mongodb.com/cloud/atlas/register>`__ and populate
      your database with the data required for the demo. You can quickly
      replicate the database using a data dump found in the `github
      repository
      <https://github.com/mongodb-industry-solutions/description-generator/tree/main/resources/dump/TogetherMDB>`__
      with a single `mongorestore
      <https://www.mongodb.com/docs/database-tools/mongorestore/>`__
      command.

   .. step:: Retrieve MongoDB Atlas Connection String

      Navigate to your cluster and click on *Connect*. Copy the
      connection string provided and save it for your .env file.

   .. step:: Create Your Together AI Account

      Sign in to `Together AI <https://www.together.ai/>`__. Navigate to
      your account and retrieve your user key, which can be found inside
      your *Profile*, then go to *Settings* and select *API Keys*. Save this
      key, as you will need it in your .env file.

   .. step:: Create Your Object Storage

      Create a new bucket in your AWS account and generate an IAM user
      with programmatic access. Save the access key and secret key for
      your .env file.

   .. step:: Configure Your Application’s Frontend

      Obtain the demo code by cloning the GitHub repository to your
      local machine, configure the environment variables and install the
      dependencies. Finally, run the app locally at
      http://localhost:3003.

For complete implementation details, including code samples,
configuration files, and tutorial videos, visit the `GitHub repository
<https://github.com/mongodb-industry-solutions/description-generator>`__.

Key Learnings
-------------

- **High-quality product descriptions drive business success:** A
  well-crafted product description enhances user engagement, improves
  SEO rankings with increased views, and helps customers make more
  informed purchase decisions. 

- **Leverage MongoDB and Together AI to automate product descriptions:**
  By combining MongoDB’s flexible and scalable database with Together
  AI’s available vision models, retailers are able to automate real-time
  product description generation that aligns with their business needs. 

- **Modern architectures speed up time to market:** Streamlining the 
  product onboarding process with AI and automation reduces manual
  effort and speeds up approvals. Using a generative AI for product
  descriptions maintains consistent UX and tone, enabling quick
  scalability for expanding product catalogs with little extra effort.

Together, these capabilities form a robust generative AI system that
scales with your business needs while ensuring efficiency and
reliability.

Technologies and Products Used
------------------------------

MongoDB Developer Data Platform
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- `Atlas Database <https://www.mongodb.com/atlas/database>`__

Partner Technologies
~~~~~~~~~~~~~~~~~~~~

-  `Next.js <https://nextjs.org/>`__.
-  `Together AI <https://www.together.ai/>`__.

Authors
-------

- Angie Guemes, MongoDB
- Prashant Juttukonda, MongoDB